version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_ID=${GOOGLE_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - FACEBOOK_ID=${FACEBOOK_ID}
      - FACEBOOK_SECRET=${FACEBOOK_SECRET}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - NEXT_PUBLIC_S3_CREDENTIAL_SECRET_ACCESS_KEY=${NEXT_PUBLIC_S3_CREDENTIAL_SECRET_ACCESS_KEY}
      - NEXT_PUBLIC_S3_CREDENTIAL_ACCESS_KEY_ID=${NEXT_PUBLIC_S3_CREDENTIAL_ACCESS_KEY_ID}
      - NEXT_PUBLIC_S3_BUCKET_NAME=${NEXT_PUBLIC_S3_BUCKET_NAME}
      - NEXT_PUBLIC_S3_IMAGE_URL=${NEXT_PUBLIC_S3_IMAGE_URL}
    ports:
      - 3000:3000
    networks:
      - my_network
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - ENDPOINT_ID=${ENDPOINT_ID}
    ports:
      - "8000:8000"
    networks:
      - my_network

  # Add more containers below (nginx, postgres, etc.)

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network:
    # external: true
    driver: bridge